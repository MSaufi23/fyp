// Mocks generated by Mockito 5.4.6 from annotations
// in fyp/test/advertisement_accuracy_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fyp/models/menu_item.dart' as _i5;
import 'package:fyp/models/report.dart' as _i7;
import 'package:fyp/models/review.dart' as _i6;
import 'package:fyp/models/user.dart' as _i4;
import 'package:fyp/services/database_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i2.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createAdminUser(_i4.User? admin) =>
      (super.noSuchMethod(
            Invocation.method(#createAdminUser, [admin]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isAdmin(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#isAdmin, [username]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> createUser(_i4.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i4.User?> getUser(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [username]),
            returnValue: _i3.Future<_i4.User?>.value(),
          )
          as _i3.Future<_i4.User?>);

  @override
  _i3.Future<void> updateUser(_i4.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteUser(_i4.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [user]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.User>> getAllBusinesses() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBusinesses, []),
            returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
          )
          as _i3.Future<List<_i4.User>>);

  @override
  _i3.Future<void> updateUserProfile(
    String? username,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [username, updates]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isSuperAdmin() =>
      (super.noSuchMethod(
            Invocation.method(#isSuperAdmin, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> deleteUserByType(String? username, _i4.UserType? userType) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUserByType, [username, userType]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateUserByType(
    String? username,
    _i4.UserType? userType,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserByType, [username, userType, updates]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> addMenuItem(String? businessUsername, _i5.MenuItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#addMenuItem, [businessUsername, item]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateMenuItem(
    String? businessUsername,
    _i5.MenuItem? item,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateMenuItem, [businessUsername, item]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteMenuItem(
    String? businessUsername,
    String? menuItemId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMenuItem, [businessUsername, menuItemId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.MenuItem>> getMenuItems(String? businessUsername) =>
      (super.noSuchMethod(
            Invocation.method(#getMenuItems, [businessUsername]),
            returnValue: _i3.Future<List<_i5.MenuItem>>.value(<_i5.MenuItem>[]),
          )
          as _i3.Future<List<_i5.MenuItem>>);

  @override
  _i3.Future<List<_i4.User>> getAllUsersWithLocation() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsersWithLocation, []),
            returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
          )
          as _i3.Future<List<_i4.User>>);

  @override
  _i3.Future<void> addBusinessReview({
    required String? businessUsername,
    required String? reviewerUsername,
    required int? rating,
    required String? comment,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addBusinessReview, [], {
              #businessUsername: businessUsername,
              #reviewerUsername: reviewerUsername,
              #rating: rating,
              #comment: comment,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.Review>> getBusinessReviews(String? businessUsername) =>
      (super.noSuchMethod(
            Invocation.method(#getBusinessReviews, [businessUsername]),
            returnValue: _i3.Future<List<_i6.Review>>.value(<_i6.Review>[]),
          )
          as _i3.Future<List<_i6.Review>>);

  @override
  _i3.Future<double> getBusinessAverageRating(String? businessUsername) =>
      (super.noSuchMethod(
            Invocation.method(#getBusinessAverageRating, [businessUsername]),
            returnValue: _i3.Future<double>.value(0.0),
          )
          as _i3.Future<double>);

  @override
  _i3.Future<void> createReport(_i7.Report? report) =>
      (super.noSuchMethod(
            Invocation.method(#createReport, [report]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i7.Report>> getAllReports() =>
      (super.noSuchMethod(
            Invocation.method(#getAllReports, []),
            returnValue: _i3.Future<List<_i7.Report>>.value(<_i7.Report>[]),
          )
          as _i3.Future<List<_i7.Report>>);

  @override
  _i3.Future<void> updateReportStatus(
    String? reportId,
    _i7.ReportStatus? status, {
    String? adminResponse,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateReportStatus,
              [reportId, status],
              {#adminResponse: adminResponse},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i7.Report>> getUserReports(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#getUserReports, [username]),
            returnValue: _i3.Future<List<_i7.Report>>.value(<_i7.Report>[]),
          )
          as _i3.Future<List<_i7.Report>>);

  @override
  _i3.Future<List<_i7.Report>> getReports() =>
      (super.noSuchMethod(
            Invocation.method(#getReports, []),
            returnValue: _i3.Future<List<_i7.Report>>.value(<_i7.Report>[]),
          )
          as _i3.Future<List<_i7.Report>>);

  @override
  _i3.Future<void> addReview(_i6.Review? review) =>
      (super.noSuchMethod(
            Invocation.method(#addReview, [review]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteReview(String? reviewId, String? businessUsername) =>
      (super.noSuchMethod(
            Invocation.method(#deleteReview, [reviewId, businessUsername]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.Review>> getAllReviews() =>
      (super.noSuchMethod(
            Invocation.method(#getAllReviews, []),
            returnValue: _i3.Future<List<_i6.Review>>.value(<_i6.Review>[]),
          )
          as _i3.Future<List<_i6.Review>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getAllAdvertisements() =>
      (super.noSuchMethod(
            Invocation.method(#getAllAdvertisements, []),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<void> deleteAdvertisement(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAdvertisement, [username]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteReport(String? reportId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteReport, [reportId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
